{
  "name": "person",
  "fields": [
    {
      "name": "id",
      "isPrimaryKey": true,
      "isAutoIncrement": true,
      "type": "INT",
      "size": 10,
      "validation": {
        "validationStrategy": "REQUIRED"
      }
    },
    {
      "name": "first-name",
      "type": "VARCHAR",
      "size": 255,
      "validation": {
        "validationStrategy": "REQUIRED"
      }
    },
    {
      "name": "last-name",
      "type": "VARCHAR",
      "size": 255,
      "validation": {
        "validationStrategy": "REQUIRED"
      }
    },
    {
      "name": "householdId",
      "type": "INT",
      "size": 10
    }
  ],
  "references": [
    {
      "referenceTable": {
        "name": "household",
        "fields": [
          {
            "name": "id",
            "isPrimaryKey": true,
            "isAutoIncrement": true,
            "type": "INT",
            "size": 10,
            "validation": {
              "validationStrategy": "REQUIRED"
            }
          },
          {
            "name": "name",
            "type": "VARCHAR",
            "size": 255,
            "notNull": true,
            "validation": {
              "validationStrategy": "REGEXP",
              "strategyLogic": "[a-zA-Z]"
            }
          },
          {
            "name": "dateOfBirth",
            "type": "DATE",
            "notNull": true,
            "validation": {
              "validationStrategy": "CUSTOM",
              "strategyLogic": "boolean isValidDate(String date) { boolean isValid = false;try {java.time.LocalDate localDate = java.time.LocalDate.parse(date,java.time.format.DateTimeFormatter.ofPattern(\"uuuu-M-d\").withResolverStyle(java.time.format.ResolverStyle.STRICT)); isValid = java.time.Period.between(localDate, java.time.LocalDate.now()).getYears() > 18; }catch (Exception e) {isValid = false;}return isValid;}"
            }
          },
          {
            "name": "members",
            "type": "INT",
            "size": 11
          }
        ],
        "references": []
      },
      "toReferenceColumn": "id",
      "fromReferenceColumn": "houseHoldId",
      "modifyStrategy": {
        "onDelete": "CASCADE",
        "onUpdate": "CASCADE"
      }
    }
  ]
}